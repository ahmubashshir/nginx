
#user html;
worker_processes  2;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;
load_module /usr/lib/nginx/modules/ndk_http_module.so;
load_module /usr/lib/nginx/modules/ngx_http_fancyindex_module.so;
load_module /usr/lib/nginx/modules/ngx_http_dav_ext_module.so;
load_module /usr/lib/nginx/modules/ngx_http_lua_module.so;
events {
    worker_connections  1024;
    accept_mutex off;
    multi_accept on;
    use epoll;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    types_hash_max_size             4096;
    lua_package_path                '${prefix}lua/?.lua;;';
    #lua_load_resty_core             off;
    #server_names_hash_bucket_size   128;
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';
    init_by_lua_file lua/init.lua;
    #access_log  logs/access.log  main;

    sendfile                        on;
    sendfile_max_chunk              512k;
    #tcp_nopush                     on;
    #keepalive_timeout              0;
    keepalive_timeout               65;
    keepalive_requests              10;
    ssi                             on;
    include                         gzip.conf;
    aio                             threads;
    include                         maps.conf;
    open_file_cache                 max=1000 inactive=2m;
    open_file_cache_valid           1m;
    open_file_cache_min_uses        1;
    open_file_cache_errors          on;
    read_ahead                      1m;
    directio                        1m;
    proxy_intercept_errors          on;
    include                         error.conf;
    server {
        listen          80;
        listen          [::]:80 default_server;
        server_name     localhost;
        charset         utf-8;
        source_charset  utf-8;
        #access_log     logs/host.access.log  main;
        include         locations.conf;
        root            /srv/http;
        fancyindex_header           /static/header.html subrequest;
        fancyindex_footer           /static/footer.html subrequest;
        fancyindex_hide_parent_dir  on;
        fancyindex_name_length      255;
        fancyindex_exact_size       off;
        fancyindex_show_path        off;
        fancyindex_ignore           lost+found \$RECYCLE.BIN "bootsqm.dat"
                                    pagefile.sys "System Volume Information"
                                    ".vmdk$" ".vdi$" "^00update$" "^ln-sites.txt$";
        location / {
            index  index.html index.htm;
        }
        location /repo {
            fancyindex              on;
            include                 indexing.conf;
            index                   index.html index.htm;
        }
        location /gists {
            charset                 utf-8;
            fancyindex              on;
            index                   index.html index.htm index.md;
        }
        location /_nnn {
            rewrite /files 0;
        }
        location /files {
            charset                 utf-8;
            fancyindex              on;
            dav_ext_methods         PROPFIND OPTIONS;
            dav_access              all:r;
            include                 indexing.conf;
            index                   index.html index.htm;
        }
        location ~ ^/old {
            charset             utf-8;
            autoindex           on;
            allow               all;
            add_header          Cache-Control "no-cache" always;
        }
        location ~ ^/json {
            allow				all;
            autoindex           on;
            charset             utf-8;
            autoindex_format    json;
            add_header          Cache-Control "no-cache" always;
            add_header          X-Index   "json";
            add_header          Access-Control-Allow-Origin *;
        }
        location ~ ^/xml {
            autoindex           on;
            charset             utf-8;
            autoindex_format    xml;
            add_header          X-Index   "xml";
            add_header          Cache-Control "no-cache" always;
            add_header          Access-Control-Allow-Origin *;
        }
        location /error {
            default_type	text/html;
            include         return.conf;
        }
        location ~ \.php(/|$) {
            fastcgi_split_path_info ^(.+?\.php)(/.*)$;
            fastcgi_pass unix:/run/php-fpm/php-fpm.sock;
            # fastcgi_pass   localhost:9000; # using TCP/IP stack
            if (!-f $document_root$fastcgi_script_name) {
                return 404;
            }
            try_files $uri $uri/ /index.php?$args;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include fastcgi_params;
        }
        location = /error.html {
            internal;
            allow			all;
            ssi             on;
            auth_basic      off;
            charset         utf-8;
            add_header      Cache-Control "no-cache" always;
            if ($status ~ '^3' ) { set $status_text 'Go Away.';set $status_type 'Redirection';set $status_cow 'borg';}
            if ($status ~ '^4' ) { set $status_text 'You Fucked Up.';set $status_type 'Client error';set $status_cow 'tired';}
            if ($status ~ '^5' ) { set $status_text 'I Fucked Up.';set $status_type 'Server error';set $status_cow 'dead';}
            set $status_msg '';
            access_by_lua_block {
                local text = ngx.var.status_text;
                ngx.var.status_msg = ngx.escape_uri(text);
            }
            expires         -1;
            root            /srv/http/static;
        }
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

	server {
		server_name r u;
		location / {
			return 301 https://reddit.com/$host$request_uri;
		}
		#
		#
	}

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
